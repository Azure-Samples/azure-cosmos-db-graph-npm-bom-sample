{
  "@azure/amqp-common": "Common library for amqp based azure sdks like @azure/event-hubs.",
  "@azure/cosmos-sign": "Utility for signing Azure Cosmos keys",
  "@azure/cosmos": "Azure Cosmos DB Service Node.js SDK for SQL API",
  "@azure/event-hubs": "Azure Event Hubs SDK for JS.",
  "@azure/ms-rest-azure-env": "Isomorphic library that provides Azure endpoints for different Azure Environments/Clouds.",
  "@azure/ms-rest-js": "Isomorphic client Runtime for Typescript/node.js/browser javascript client libraries generated using AutoRest",
  "@azure/ms-rest-nodeauth": "Azure Authentication library in node.js with type definitions.",
  "@azure/storage-blob": "Microsoft Azure Storage SDK for JavaScript - Blob",
  "@babel/runtime-corejs2": "babel's modular runtime helpers with core-js@2 polyfilling",
  "@sindresorhus/is": "Type check values",
  "@szmarczak/http-timer": "Timings for HTTP requests",
  "@types/async-lock": "TypeScript definitions for async-lock",
  "@types/babel-types": "TypeScript definitions for babel-types",
  "@types/babylon": "TypeScript definitions for babylon",
  "@types/debug": "TypeScript definitions for debug",
  "@types/is-buffer": "TypeScript definitions for is-buffer",
  "@types/node-fetch": "TypeScript definitions for node-fetch",
  "@types/node": "TypeScript definitions for Node.js",
  "@types/tunnel": "TypeScript definitions for tunnel",
  "abbrev": "Like ruby's abbrev module, but in js",
  "abort-controller": "An implementation of WHATWG AbortController interface.",
  "accepts": "Higher-level content negotiation",
  "acorn-node": "the acorn javascript parser, preloaded with plugins for syntax parity with recent node versions",
  "acorn-walk": "ECMAScript (ESTree) AST walker",
  "acorn": "ECMAScript parser",
  "adal-node": "Windows Azure Active Directory Client Library for node",
  "after": "after - tiny flow control",
  "ajv": "Another JSON Schema Validator",
  "ansi-align": "align-text with ANSI support for CLIs",
  "ansi-colors": "Easily add ANSI colors to your text and symbols in the terminal. A faster drop-in replacement for chalk, kleur and turbocolor (without the dependencies and rendering bugs).",
  "ansi-regex": "Regular expression for matching ANSI escape codes",
  "ansi-styles": "ANSI escape codes for styling strings in the terminal",
  "anymatch": "Matches strings against configurable strings, globs, regular expressions, and/or functions",
  "aproba": "A ridiculously light-weight argument validator (now browser friendly)",
  "are-we-there-yet": "Keep track of the overall completion of many disparate processes",
  "argparse": "Very powerful CLI arguments parser. Native port of argparse - python's options parsing library",
  "array-each": "Loop over each item in an array and call the given function on every element.",
  "array-flatten": "Flatten nested arrays",
  "array-from": "A ponyfill for the ES 2015 (ES6) `Array.from()`.",
  "array-slice": "Array-slice method. Slices `array` from the `start` index up to, but not including, the `end` index.",
  "arraybuffer.slice": "Exports a function for slicing ArrayBuffers (no polyfilling)",
  "asap": "High-priority task queue for Node.js and browsers",
  "asn1": "Contains parsers and serializers for ASN.1 (currently BER only)",
  "assert-plus": "Extra assertions on top of node's assert module",
  "ast-transform": "Convenience wrapper for performing AST transformations with browserify transform streams",
  "ast-types": "Esprima-compatible implementation of the Mozilla JS Parser API",
  "async-limiter": "asynchronous function queue with adjustable concurrency",
  "async-lock": "Lock on asynchronous code",
  "async": "Higher-order functions and common patterns for asynchronous code",
  "asynckit": "Minimal async jobs utility library, with streams support",
  "atob": "atob for Node.JS and Linux / Mac / Windows CLI (it's a one-liner)",
  "aws-sign2": "AWS signing. Originally pulled from LearnBoost/knox, maintained as vendor in request, now a standalone module.",
  "aws4": "Signs and prepares requests using AWS Signature Version 4",
  "azure-common": "Microsoft Azure Common Client Library for node",
  "azure-sb": "Microsoft Azure Service Bus Service Library for node",
  "babel-runtime": "babel selfContained runtime",
  "babel-types": "Babel Types is a Lodash-esque utility library for AST nodes",
  "babylon-walk": "Lightweight Babylon AST traversal",
  "babylon": "A JavaScript parser",
  "backo2": "simple backoff based on segmentio/backo",
  "balanced-match": "Match balanced character pairs, like \"{\" and \"}\"",
  "base64-arraybuffer": "Encode/decode base64 data into ArrayBuffers",
  "base64-js": "Base64 encoding/decoding in pure JS",
  "base64id": "Generates a base64 id",
  "basic-auth": "node.js basic auth parser",
  "bcrypt-pbkdf": "Port of the OpenBSD bcrypt_pbkdf function to pure JS",
  "better-assert": "Better assertions for node, reporting the expr, filename, lineno etc",
  "big-number": "Light, ultra-fast javascript implementation for BigIntegers (base arithmetic operations)",
  "bignumber.js": "A library for arbitrary-precision decimal and non-decimal arithmetic",
  "binary-extensions": "List of binary file extensions",
  "binary-search-bounds": "Better binary searching",
  "bl": "Buffer List: collect buffers and access with a standard readable Buffer interface, streamable too!",
  "blob": "Abstracts out Blob and uses BlobBulder in cases where it is supported with any vendor prefix.",
  "bluebird": "Full featured Promises/A+ implementation with exceptionally good performance",
  "body-parser": "Node.js body parsing middleware",
  "boxen": "Create boxes in the terminal",
  "brace-expansion": "Brace expansion as known from sh/bash",
  "braces": "Bash-like brace expansion, implemented in JavaScript. Safer than other brace expansion libs, with complete support for the Bash 4.3 braces specification, without sacrificing speed.",
  "brfs": "browserify fs.readFileSync() static asset inliner",
  "brotli": "A port of the Brotli compression algorithm as used in WOFF2",
  "browser-resolve": "resolve which handles browser field support in package.json",
  "browser-stdout": "`process.stdout` in your browser.",
  "browserify-optional": "A browserify transform that allows optional dependencies in try..catch blocks",
  "buffer-crc32": "A pure javascript CRC32 algorithm that plays nice with binary data",
  "buffer-equal-constant-time": "Constant-time comparison of Buffers",
  "buffer-equal": "return whether two buffers are equal",
  "buffer-from": "A [ponyfill](https://ponyfill.com) for `Buffer.from`, uses native implementation if available.",
  "buffer-writer": "a fast, efficient buffer writer",
  "buffer": "Node.js Buffer API, for the browser",
  "bytes": "Utility to parse a string bytes to bytes and vice-versa",
  "cacheable-request": "Wrap native HTTP requests with RFC compliant cache support",
  "callsite": "access to v8's CallSites",
  "camelcase": "Convert a dash/dot/underscore/space separated string to camelCase or PascalCase: `foo-bar` → `fooBar`",
  "caseless": "Caseless object set/get/has, very useful when working with HTTP headers.",
  "chalk": "Terminal string styling done right",
  "character-parser": "Parse JavaScript one character at a time to look for snippets in Templates.  This is not a validator, it's just designed to allow you to have sections of JavaScript delimited by brackets robustly.",
  "chokidar": "A neat wrapper around node.js fs.watch / fs.watchFile / fsevents.",
  "chownr": "like `chown -R`",
  "ci-info": "Get details about the current Continuous Integration environment",
  "clean-css": "A well-tested CSS minifier",
  "cli-boxes": "Boxes for use in the terminal",
  "cliui": "easily create complex multi-column command-line-interfaces",
  "clone-response": "Clone a Node.js HTTP response stream",
  "clone": "deep cloning of objects and arrays",
  "coffeescript": "Unfancy JavaScript",
  "color-convert": "Plain color conversion functions",
  "color-name": "A list of color names and its values",
  "colors": "get colors in your node.js console",
  "combined-stream": "A stream that emits multiple other streams one after another.",
  "commander": "the complete solution for node.js command-line programs",
  "complex.js": "A complex number library",
  "component-bind": "function binding utility",
  "component-emitter": "Event emitter",
  "component-inherit": "Prototype inheritance utility",
  "concat-map": "concatenative mapdashery",
  "concat-stream": "writable stream that concatenates strings or binary data and calls a callback with the result",
  "configstore": "Easily load and save config without having to think about where and how",
  "console-control-strings": "A library of cross-platform tested terminal/console command strings for doing things like color and cursor positioning.  This is a subset of both ansi and vt100.  All control codes included work on both Windows & Unix-like OSes, except where noted.",
  "constantinople": "Determine whether a JavaScript expression evaluates to a constant (using acorn)",
  "content-disposition": "Create and parse Content-Disposition header",
  "content-type": "Create and parse HTTP Content-Type header",
  "convert-source-map": "Converts a source-map from/to  different formats and allows adding/changing properties.",
  "cookie-parser": "Parse HTTP request cookies",
  "cookie-signature": "Sign and unsign cookies",
  "cookie": "HTTP server cookie parsing and serialization",
  "core-js": "Standard library",
  "core-util-is": "The `util.is*` functions introduced in Node v0.12.",
  "cross-spawn": "Cross platform child_process#spawn and child_process#spawnSync",
  "crypto-hash": "Tiny hashing module that uses the native crypto API in Node.js and the browser",
  "crypto-js": "JavaScript library of crypto standards.",
  "crypto-random-string": "Generate a cryptographically strong random string",
  "csv-generate": "CSV and object generation implementing the Node.js `stream.Readable` API",
  "csv-parse": "CSV parsing implementing the Node.js `stream.Transform` API",
  "csv-stringify": "CSV stringifier implementing the Node.js `stream.Transform` API",
  "csv": "CSV parser with simple api, full of options and tested against large datasets.",
  "d": "Property descriptor factory",
  "dashdash": "A light, featureful and explicit option parsing library.",
  "date-format": "Formatting Date objects as strings since 2013",
  "date-utils": "Date add-ons for Node.js",
  "dateformat": "A node.js package for Steven Levithan's excellent dateFormat() function.",
  "debug": "small debugging utility",
  "decamelize": "Convert a camelized string into a lowercased one with a custom separator: unicornRainbow → unicorn_rainbow",
  "decimal.js": "An arbitrary-precision Decimal type for JavaScript.",
  "decompress-response": "Decompress a HTTP response if needed",
  "deep-equal": "node's assert.deepEqual algorithm",
  "deep-extend": "Recursive object extending",
  "deep-is": "node's assert.deepEqual algorithm except for NaN being equal to NaN",
  "defer-to-connect": "The safe way to handle the `connect` socket event",
  "define-properties": "Define multiple non-enumerable properties at once. Uses `Object.defineProperty` when available; falls back to standard assignment in older engines.",
  "delayed-stream": "Buffers events from a stream until you are ready to handle them.",
  "delegates": "delegate methods and accessors to another property",
  "denque": "The fastest javascript implementation of a double-ended queue. Maintains compatability with deque.",
  "depd": "Deprecate all the things",
  "destroy": "destroy a stream if possible",
  "detect-file": "Detects if a file exists and returns the resolved filepath.",
  "detect-libc": "Node.js module to detect the C standard library (libc) implementation family and version",
  "dfa": "A state machine compiler",
  "diff": "A javascript text diff implementation.",
  "doctypes": "Shorthands for commonly used doctypes",
  "dot-prop": "Get, set, or delete a property from a nested object using a dot path",
  "double-ended-queue": "Extremely fast double-ended queue implementation",
  "duplexer": "Creates a duplex stream",
  "duplexer2": "Like duplexer but using streams3",
  "duplexer3": "Like duplexer but using streams3",
  "ecc-jsbn": "ECC JS code based on JSBN",
  "ecdsa-sig-formatter": "Translate ECDSA signatures between ASN.1/DER and JOSE-style concatenation",
  "ee-first": "return the first event in a set of ee/event pairs",
  "electron-download": "download electron prebuilt binary zips from github releases",
  "electron": "Build cross platform desktop apps with JavaScript, HTML, and CSS",
  "emoji-regex": "A regular expression to match all Emoji-only symbols as per the Unicode Standard.",
  "encodeurl": "Encode a URL to a percent-encoded form, excluding already-encoded sequences",
  "end-of-stream": "Call a callback when a readable/writable/duplex stream has completed or failed.",
  "engine.io-client": "Client for the realtime Engine",
  "engine.io-parser": "Parser for the client for the realtime Engine",
  "engine.io": "The realtime engine behind Socket.IO. Provides the foundation of a bidirectional connection between client and server",
  "env-paths": "Get paths for storing things like data, config, cache, etc",
  "envconf": "a module for express-style programmatic configuration",
  "es-abstract": "ECMAScript spec abstract operations.",
  "es-to-primitive": "ECMAScript “ToPrimitive” algorithm. Provides ES5 and ES2015 versions.",
  "es5-ext": "ECMAScript extensions and shims",
  "es6-iterator": "Iterator abstraction based on ES6 specification",
  "es6-map": "ECMAScript6 Map polyfill",
  "es6-set": "ECMAScript6 Set polyfill",
  "es6-symbol": "ECMAScript 6 Symbol polyfill",
  "escape-html": "Escape string for use in HTML",
  "escape-latex": "Escape LaTeX special characters with Javascript",
  "escape-string-regexp": "Escape RegExp special characters",
  "escodegen": "ECMAScript code generator",
  "esprima": "ECMAScript parsing infrastructure for multipurpose analysis",
  "estraverse": "ECMAScript JS AST traversal functions",
  "estree-is-function": "check if an AST node is a function of some sort",
  "esutils": "utility box for ECMAScript language tools",
  "etag": "Create simple HTTP ETags",
  "event-emitter": "Environment agnostic event emitter",
  "event-target-shim": "An implementation of WHATWG EventTarget interface.",
  "eventemitter2": "A Node.js event emitter implementation with namespaces, wildcards, TTL and browser support.",
  "events": "Node's event emitter for all engines.",
  "execa": "Process execution for humans",
  "exit": "A replacement for process.exit that ensures stdio are fully drained before exiting.",
  "expand-tilde": "Bash-like tilde expansion for node.js. Expands a leading tilde in a file path to the user home directory, or `~+` to the cwd.",
  "express-favicon": "express favicon middleware",
  "express-session": "Simple session middleware for Express",
  "express": "Fast, unopinionated, minimalist web framework",
  "extend": "Port of jQuery.extend for node.js and the browser",
  "extract-zip": "unzip a zip file into a directory using 100% javascript",
  "extsprintf": "extended POSIX-style sprintf",
  "faker": "Generate massive amounts of fake contextual data",
  "fast-deep-equal": "Fast deep equal",
  "fast-json-stable-stringify": "deterministic `JSON.stringify()` - a faster version of substack's json-stable-strigify without jsonify",
  "fast-levenshtein": "Efficient implementation of Levenshtein algorithm  with locale-specific collator support.",
  "fd-slicer": "safely create multiple ReadStream or WriteStream objects from the same file descriptor",
  "filesize": "JavaScript library to generate a human readable String describing the file size",
  "fill-range": "Fill in a range of numbers or letters, optionally passing an increment or `step` to use, or create a regex-compatible range with `options.toRegex`",
  "finalhandler": "Node.js final http responder",
  "find-up": "Find a file or directory by walking up parent directories",
  "findup-sync": "Find the first file matching a given pattern in the current directory or the nearest ancestor directory.",
  "fined": "Find a file given a declaration of locations.",
  "flagged-respawn": "A tool for respawning node binaries when special flags are present.",
  "flat": "Take a nested Javascript object and flatten it, or unflatten an object with delimited keys",
  "flatted": "A super light and fast circular JSON parser.",
  "fontkit": "An advanced font engine for Node and the browser",
  "for-in": "Iterate over the own and inherited enumerable properties of an object, and return an object with properties that evaluate to true from the callback. Exit early by returning `false`. JavaScript/Node.js",
  "for-own": "Iterate over the own enumerable properties of an object, and return an object with properties that evaluate to true from the callback. Exit early by returning `false`. JavaScript/Node.js.",
  "foreachasync": "A node- and browser-ready async (now with promises) counterpart of Array.prototype.forEach",
  "forever-agent": "HTTP Agent that keeps socket connections alive between keep-alive requests. Formerly part of mikeal/request, now a standalone module.",
  "form-data": "A library to create readable \"multipart/form-data\" streams. Can be used to submit forms and file uploads to other web applications.",
  "forwarded": "Parse HTTP X-Forwarded-For header",
  "fraction.js": "A rational number library",
  "fresh": "HTTP response freshness testing",
  "fs-extra": "fs-extra contains methods that aren't included in the vanilla Node.js fs package. Such as mkdir -p, cp -r, and rm -rf.",
  "fs-minipass": "fs read and write streams based on minipass",
  "fs.realpath": "Use node's fs.realpath, but fall back to the JS implementation if the native one fails",
  "fsevents": "Native Access to Mac OS-X FSEvents",
  "function-bind": "Implementation of Function.prototype.bind",
  "gauge": "A terminal based horizontal guage",
  "generate-function": "Module that helps you write generated functions in Node",
  "generic-pool": "Generic resource pooling for Node.JS",
  "get-assigned-identifiers": "get a list of identifiers that are initialised by a JavaScript AST node.",
  "get-caller-file": "[![Build Status](https://travis-ci.org/stefanpenner/get-caller-file.svg?branch=master)](https://travis-ci.org/stefanpenner/get-caller-file) [![Build status](https://ci.appveyor.com/api/projects/status/ol2q94g1932cy14a/branch/master?svg=true)](https://ci.a",
  "get-stream": "Get a stream as a string, buffer, or array",
  "getobject": "get.and.set.deep.objects.easily = true",
  "getpass": "getpass for node.js",
  "glob-parent": "Extract the non-magic parent path from a glob string.",
  "glob": "a little globber",
  "global-dirs": "Get the directory of globally installed packages and binaries",
  "global-modules": "The directory used by npm for globally installed npm modules.",
  "global-prefix": "Get the npm global path prefix.",
  "got": "Simplified HTTP requests",
  "graceful-fs": "A drop-in replacement for fs, making various improvements.",
  "gremlin": "JavaScript Gremlin Language Variant",
  "growl": "Growl unobtrusive notifications",
  "grunt-cli": "The grunt command line interface",
  "grunt-known-options": "The known options used in Grunt",
  "grunt-legacy-log-utils": "Static methods for the Grunt 0.4.x logger.",
  "grunt-legacy-log": "The Grunt 0.4.x logger.",
  "grunt-legacy-util": "Some old grunt utils provided for backwards compatibility.",
  "grunt": "The JavaScript Task Runner",
  "har-schema": "JSON Schema for HTTP Archive (HAR)",
  "har-validator": "Extremely fast HTTP Archive (HAR) validator using JSON Schema",
  "has-binary2": "A function that takes anything in javascript and returns true if its argument contains binary data.",
  "has-cors": "Detects support for Cross-Origin Resource Sharing",
  "has-flag": "Check if argv has a specific flag",
  "has-symbols": "Determine if the JS environment has Symbol support. Supports spec, or shams.",
  "has-unicode": "Try to guess if your terminal supports unicode",
  "has-yarn": "Check if a project is using Yarn",
  "has": "Object.prototype.hasOwnProperty.call shortcut",
  "he": "A robust HTML entities encoder/decoder with full Unicode support.",
  "homedir-polyfill": "Node.js os.homedir polyfill for older versions of node.js.",
  "hooker": "Monkey-patch (hook) functions for debugging and stuff.",
  "http-cache-semantics": "Parses Cache-Control and other headers. Helps building correct HTTP caches and proxies",
  "http-errors": "Create HTTP error objects",
  "http-signature": "Reference implementation of Joyent's HTTP Signature scheme.",
  "iconv-lite": "Convert character encodings in pure javascript.",
  "ieee754": "Read/write IEEE754 floating point numbers from/to a Buffer or array-like object",
  "ignore-by-default": "A list of directories you should ignore by default",
  "ignore-walk": "Nested/recursive `.gitignore`/`.npmignore` parsing and filtering.",
  "import-lazy": "Import a module lazily",
  "imurmurhash": "An incremental implementation of MurmurHash3",
  "indexof": "Microsoft sucks",
  "inflight": "Add callbacks to requests in flight to avoid async duplication",
  "inherits": "Browser-friendly inheritance fully compatible with standard node.js inherits()",
  "ini": "An ini encoder/decoder for node",
  "interpret": "A dictionary of file extensions and associated module loaders.",
  "ip-regex": "Regular expression for matching IP addresses (IPv4 & IPv6)",
  "ipaddr.js": "A library for manipulating IPv4 and IPv6 addresses in JavaScript.",
  "is-absolute": "Returns true if a file path is absolute. Does not rely on the path module and can be used as a polyfill for node.js native `path.isAbolute`.",
  "is-arguments": "Is this an arguments object? It's a harder question than you think.",
  "is-binary-path": "Check if a file path is a binary file",
  "is-buffer": "Determine if an object is a Buffer",
  "is-callable": "Is this JS value callable? Works with Functions and GeneratorFunctions, despite ES6 @@toStringTag.",
  "is-ci": "Detect if the current environment is a CI server",
  "is-date-object": "Is this value a JS Date object? This module works cross-realm/iframe, and despite ES6 @@toStringTag.",
  "is-expression": "Check if a string is a valid JavaScript expression",
  "is-extglob": "Returns true if a string has an extglob.",
  "is-fullwidth-code-point": "Check if the character represented by a given Unicode code point is fullwidth",
  "is-generator-function": "Determine if a function is a native generator function.",
  "is-glob": "Returns `true` if the given string looks like a glob pattern or an extglob pattern. This makes it easy to create code that only uses external modules like node-glob when necessary, resulting in much faster code execution and initialization time, and a bet",
  "is-installed-globally": "Check if your package was installed globally",
  "is-npm": "Check if your code is running as an npm script",
  "is-number": "Returns true if a number or string value is a finite number. Useful for regex matches, parsing, user input, etc.",
  "is-obj": "Check if a value is an object",
  "is-path-inside": "Check if a path is inside another path",
  "is-plain-object": "Returns true if an object was created by the `Object` constructor.",
  "is-promise": "Test whether an object looks like a promises-a+ promise",
  "is-property": "Tests if a JSON property can be accessed using . syntax",
  "is-regex": "Is this value a JS regex? Works cross-realm/iframe, and despite ES6 @@toStringTag",
  "is-relative": "Returns `true` if the path appears to be relative.",
  "is-stream": "Check if something is a Node.js stream",
  "is-symbol": "Determine if a value is an ES6 Symbol or not.",
  "is-typedarray": "Detect whether or not an object is a Typed Array",
  "is-unc-path": "Returns true if a filepath is a windows UNC file path.",
  "is-windows": "Returns true if the platform is windows. UMD module, works with node.js, commonjs, browser, AMD, electron, etc.",
  "is-yarn-global": "Check if installed by yarn globally without any `fs` calls",
  "isarray": "Array#isArray for older browsers",
  "isexe": "Minimal module to check if a file is executable.",
  "isobject": "Returns true if the value is an object and not an array or null.",
  "isstream": "Determine if an object is a Stream",
  "javascript-natural-sort": "Natural Sort algorithm for Javascript - Version 0.7 - Released under MIT license",
  "js-stringify": "Stringify an object so it can be safely inlined in JavaScript code",
  "js-tokens": "A regex that tokenizes JavaScript.",
  "js-yaml": "YAML 1.2 parser and serializer",
  "jsbn": "The jsbn library is a fast, portable implementation of large-number math in pure JavaScript, enabling public-key crypto and other applications on desktop and mobile browsers.",
  "json-buffer": "JSON parse & stringify that supports binary via bops & base64",
  "json-schema-traverse": "Traverse JSON Schema passing each schema object to callback",
  "json-schema": "JSON Schema validation and specifications",
  "json-stringify-safe": "Like JSON.stringify, but doesn't blow up on circular refs.",
  "jsonfile": "Easily read/write JSON files.",
  "jsprim": "utilities for primitive JavaScript types",
  "jssha": "jsSHA is a JavaScript implementation of the complete Secure Hash Standard family (SHA-1, SHA-224, SHA3-224, SHA-256, SHA3-256, SHA-384, SHA3-384, SHA-512, SHA3-512, SHAKE128, and SHAKE256) as well as HMAC",
  "jstransformer": "Normalize the API of any jstransformer",
  "jwa": "JWA implementation (supports all JWS algorithms)",
  "jws": "Implementation of JSON Web Signatures",
  "keyv": "Simple key-value storage with support for multiple backends",
  "kind-of": "Get the native type of a value.",
  "latest-version": "Get the latest version of an npm package",
  "levn": "Light ECMAScript (JavaScript) Value Notation - human written, concise, typed, flexible",
  "liftoff": "Launch your command line tool with ease.",
  "linebreak": "An implementation of the Unicode Line Breaking Algorithm (UAX #14)",
  "locate-path": "Get the first path that exists on disk of multiple paths",
  "lodash.clone": "The lodash method `_.clone` exported as a module.",
  "lodash": "Lodash modular utilities.",
  "log-symbols": "Colored symbols for various log levels. Example: `✔︎ Success`",
  "log4js": "Port of Log4js to work with node.",
  "long": "A Long class for representing a 64-bit two's-complement integer value.",
  "loose-envify": "Fast (and loose) selective `process.env` replacer using js-tokens instead of an AST",
  "lowercase-keys": "Lowercase the keys of an object",
  "lru-cache": "A cache object that deletes the least-recently-used items.",
  "m26-js": "A Node.js library for speed and pace calculations for sports like running and cycling. Age-graded times and heart-rate training-zones are also supported.",
  "macos-release": "Get the name and version of a macOS release from the Darwin version",
  "magic-string": "Modify strings, generate sourcemaps",
  "make-dir": "Make a directory and its parents if needed - Think `mkdir -p`",
  "make-iterator": "Convert an argument into a valid iterator. Based on the `.makeIterator()` implementation in mout https://github.com/mout/mout.",
  "map-cache": "Basic cache object for storing key-value pairs.",
  "mathjs": "Math.js is an extensive math library for JavaScript and Node.js. It features a flexible expression parser with support for symbolic computation, comes with a large set of built-in functions and constants, and offers an integrated solution to work with dif",
  "media-typer": "Simple RFC 6838 media type parser and formatter",
  "merge-descriptors": "Merge objects using descriptors",
  "merge-source-map": "Merge old source map and new source map in multi-transform flow",
  "merge-stream": "Create a stream that emits events from multiple other streams",
  "methods": "HTTP methods that node supports",
  "micromatch": "Glob matching for javascript/node.js. A replacement and faster alternative to minimatch and multimatch.",
  "mime-db": "Media Type Database",
  "mime-types": "The ultimate javascript content-type utility.",
  "mime": "A comprehensive library for mime-type mapping",
  "mimic-fn": "Make a function mimic another one",
  "mimic-response": "Mimic a Node.js HTTP response stream",
  "minimatch": "a glob matcher in javascript",
  "minimist": "parse argument options",
  "minipass": "minimal implementation of a PassThrough stream",
  "minizlib": "A small fast zlib stream built on [minipass](http://npm.im/minipass) and Node.js's zlib binding.",
  "mixme": "A library for recursive merging of Javascript objects",
  "mkdirp": "Recursively mkdir, like `mkdir -p`",
  "mocha": "simple, flexible, fun test framework",
  "moment-timezone": "Parse and display moments in any timezone.",
  "moment": "Parse, validate, manipulate, and display dates",
  "morgan": "HTTP request logger middleware for node.js",
  "mpns": "A Node.js interface to the Microsoft Push Notification Service (MPNS) for Windows Phone.",
  "ms": "Tiny millisecond conversion utility",
  "mssql": "Microsoft SQL Server client for Node.js.",
  "mysql": "A node.js driver for mysql. It is written in JavaScript, does not require compiling, and is 100% MIT licensed.",
  "mysql2": "fast mysql driver. Implements core protocol, prepared statements, ssl and compression in native JS",
  "named-placeholders": "sql named placeholders to unnamed compiler",
  "nan": "Native Abstractions for Node.js: C++ header for Node 0.8 -> 11 compatibility",
  "native-duplexpair": "Make a full duplex stream with 2 Duplex endpoints, using the native version of `Duplex`",
  "needle": "The leanest and most handsome HTTP client in the Nodelands.",
  "negotiator": "HTTP content negotiation",
  "next-tick": "Environment agnostic nextTick polyfill",
  "nice-try": "Tries to execute a function and discards any error that occurs",
  "node-abort-controller": "AbortController for Node based on EventEmitter",
  "node-environment-flags": "> Polyfill/shim for `process.allowedNodeEnvironmentFlags`",
  "node-fetch": "A light-weight module that brings window.fetch to node.js",
  "node-pre-gyp": "Node.js native addon binary install tool",
  "nodemon": "Simple monitor script for use during development of a node.js app.",
  "nopt": "Option parsing for Node, supporting types, shorthands, etc. Used by npm.",
  "normalize-path": "Normalize slashes in a file path to be posix/unix-like forward slashes. Also condenses repeat slashes to a single slash and removes and trailing slashes, unless disabled.",
  "normalize-url": "Normalize a URL",
  "npm-bundled": "list things in node_modules that are bundledDependencies, or transitive dependencies thereof",
  "npm-packlist": "Get a list of the files to add from a folder into an npm package",
  "npm-run-path": "Get your PATH prepended with locally installed binaries",
  "npmlog": "logger for npm",
  "nugget": "minimalist wget clone written in node. HTTP GETs a file and saves it to the current working directory",
  "oauth-sign": "OAuth 1 signing. Formerly a vendor lib in mikeal/request, now a standalone module.",
  "object-assign": "ES2015 `Object.assign()` ponyfill",
  "object-component": "Object utils.",
  "object-inspect": "string representations of objects in node and the browser",
  "object-is": "ES6-compliant shim for Object.is - differentiates between -0 and +0",
  "object-keys": "An Object.keys replacement, in case Object.keys is not available. From https://github.com/es-shims/es5-shim",
  "object.assign": "ES6 spec-compliant Object.assign shim. From https://github.com/es-shims/es6-shim",
  "object.defaults": "Like `extend` but only copies missing properties/values to the target object.",
  "object.entries": "ES2017 spec-compliant Object.entries shim.",
  "object.getownpropertydescriptors": "ES2017 spec-compliant shim for `Object.getOwnPropertyDescriptors` that works in ES5.",
  "object.map": "Similar to map for arrays, this creates a new object by calling the callback on each property of the original object.",
  "object.pick": "Returns a filtered copy of an object with only the specified keys, similar to `_.pick` from lodash / underscore.",
  "on-finished": "Execute a callback when a request closes, finishes, or errors",
  "on-headers": "Execute a listener when a response is about to write headers",
  "once": "Run a function exactly one time",
  "onetime": "Ensure a function is only called once",
  "optionator": "option parsing and help generation",
  "os-homedir": "Node.js 4 `os.homedir()` ponyfill",
  "os-name": "Get the name of the current operating system. Example: macOS Sierra",
  "os-tmpdir": "Node.js os.tmpdir() ponyfill",
  "osenv": "Look up environment settings specific to different operating systems",
  "p-cancelable": "Create a promise that can be canceled",
  "p-finally": "`Promise#finally()` ponyfill - Invoked when the promise is settled regardless of outcome",
  "p-limit": "Run multiple promise-returning & async functions with limited concurrency",
  "p-locate": "Get the first fulfilled promise that satisfies the provided testing function",
  "p-try": "`Start a promise chain",
  "package-json": "Get metadata of a package from the npm registry",
  "packet-reader": "Read binary packets...",
  "pako": "zlib port to javascript - fast, modularized, with browser support",
  "parse-filepath": "Pollyfill for node.js `path.parse`, parses a filepath into an object.",
  "parse-passwd": "Parse a passwd file into a list of users.",
  "parseqs": "Provides methods for parsing a query string into an object, and vice versa.",
  "parseuri": "Method that parses a URI and returns an array of its components",
  "parseurl": "parse a url with memoization",
  "path-exists": "Check if a path exists",
  "path-is-absolute": "Node.js 0.12 path.isAbsolute() ponyfill",
  "path-key": "Get the PATH environment variable key cross-platform",
  "path-parse": "Node.js path.parse() ponyfill",
  "path-root-regex": "Regular expression for getting the root of a posix or windows filepath.",
  "path-root": "Get the root of a posix or windows filepath.",
  "path-to-regexp": "Express style path to RegExp utility",
  "pdfkit": "A PDF generation library for Node.js",
  "pend": "dead-simple optimistic async helper",
  "performance-now": "Implements performance.now (based on process.hrtime).",
  "pg-connection-string": "Functions for dealing with a PostgresSQL connection string",
  "pg-int8": "64-bit big-endian signed integer-to-string conversion",
  "pg-pool": "Connection pool for node-postgres",
  "pg-types": "Query result type converters for node-postgres",
  "pg": "PostgreSQL client - pure javascript & libpq with the same API",
  "pgpass": "Module for reading .pgpass",
  "picomatch": "Blazing fast and accurate glob matcher written in JavaScript, with no dependencies and full support for standard and extended Bash glob features, including braces, extglobs, POSIX brackets, and regular expressions.",
  "png-js": "A PNG decoder in CoffeeScript",
  "postgres-array": "Parse postgres array columns",
  "postgres-bytea": "Postgres bytea parser",
  "postgres-date": "Postgres date column parser",
  "postgres-interval": "Parse Postgres interval columns",
  "prelude-ls": "prelude.ls is a functionally oriented utility library. It is powerful and flexible. Almost all of its functions are curried. It is written in, and is the recommended base library for, LiveScript.",
  "prepend-http": "Prepend `https://` to humanized URLs like sindresorhus.com and localhost",
  "pretty-bytes": "Convert bytes to a human readable string: 1337 → 1.34 kB",
  "priorityqueuejs": "a simple priority queue data structure",
  "process": "process information for node.js and browsers",
  "progress-stream": "Read the progress of a stream",
  "promise": "Bare bones Promises/A+ implementation",
  "prop-types": "Runtime type checking for React props and similar objects.",
  "proxy-addr": "Determine address of proxied request",
  "psl": "Domain name parser based on the Public Suffix List",
  "pstree.remy": "Collects the full tree of processes from /proc",
  "pug-attrs": "Generate code for Pug attributes",
  "pug-code-gen": "Default code-generator for pug.  It generates HTML via a JavaScript template function.",
  "pug-error": "Standard error objects for pug",
  "pug-filters": "Code for processing filters in pug templates",
  "pug-lexer": "The pug lexer (takes a string and converts it to an array of tokens)",
  "pug-linker": "Link multiple pug ASTs together using include/extends",
  "pug-load": "The Pug loader is responsible for loading the depenendencies of a given Pug file.",
  "pug-parser": "The pug parser (takes an array of tokens and converts it to an abstract syntax tree)",
  "pug-runtime": "The runtime components for the pug templating language",
  "pug-strip-comments": "Strip comments from a Pug token stream (from the lexer)",
  "pug-walk": "Walk and transform a pug AST",
  "pug": "A clean, whitespace-sensitive template language for writing HTML",
  "pump": "pipe streams together and close all of them if one of them closes",
  "punycode": "A robust Punycode converter that fully complies to RFC 3492 and RFC 5891, and works on nearly all JavaScript platforms.",
  "qs": "A querystring parser that supports nesting and arrays, with a depth limit",
  "querystring": "Node's querystring module for all engines.",
  "quote-stream": "transform a stream into a quoted string",
  "random-bytes": "URL and cookie safe UIDs",
  "range-parser": "Range header field string parser",
  "raw-body": "Get and validate the raw body of a readable stream.",
  "rc": "hardwired configuration loader",
  "react-is": "Brand checking of React Elements.",
  "react": "React is a JavaScript library for building user interfaces.",
  "readable-stream": "Streams3, a user-land copy of the stream library from Node.js",
  "readdirp": "Recursive version of fs.readdir with streaming api.",
  "rechoir": "Prepare a node environment to require files with different extensions.",
  "redis-commands": "Redis commands",
  "redis-errors": "Error classes used in node_redis",
  "redis-parser": "Javascript Redis protocol (RESP) parser",
  "redis": "Redis client library",
  "regenerator-runtime": "Runtime for Regenerator-compiled generator and async functions.",
  "regexp.prototype.flags": "ES6 spec-compliant RegExp.prototype.flags shim.",
  "registry-auth-token": "Get the auth token set for an npm registry (if any)",
  "registry-url": "Get the set npm registry URL",
  "request": "Simplified HTTP request client.",
  "require-directory": "Recursively iterates over specified directory, require()'ing each file, and returning a nested hash structure containing those modules.",
  "require-main-filename": "shim for require.main.filename() that works in as many environments as possible",
  "resolve-dir": "Resolve a directory that is either local, global or in the user's home directory.",
  "resolve": "resolve like require.resolve() on behalf of files asynchronously and synchronously",
  "responselike": "A response-like object for mocking a Node.js HTTP response stream",
  "restructure": "Declaratively encode and decode binary data",
  "rfdc": "Really Fast Deep Clone",
  "rhea-promise": "A Promisified layer over rhea AMQP client",
  "rhea": "reactive AMQP 1.0 library",
  "rimraf": "A deep deletion module for node (like `rm -rf`)",
  "safe-buffer": "Safer Node.js Buffer API",
  "safer-buffer": "Modern Buffer API polyfill without footguns",
  "sax": "An evented streaming XML parser in JavaScript",
  "scope-analyzer": "simple scope analysis for javascript ASTs",
  "seed-random": "Generate random numbers with a seed, useful for reproducible tests",
  "semaphore": "semaphore for node",
  "semver-diff": "Get the diff type of two semver versions: 0.0.1 0.0.2 → patch",
  "semver": "The semantic version parser used by npm.",
  "send": "Better streaming static file server with Range and conditional-GET support",
  "seq-queue": "A simple tool to keep requests to be executed in order.",
  "serve-static": "Serve static files",
  "set-blocking": "set blocking stdio and stderr ensuring that terminal output does not truncate",
  "setprototypeof": "A small polyfill for Object.setprototypeof",
  "shallow-copy": "make a shallow copy of an object or array",
  "shebang-command": "Get the command from a shebang",
  "shebang-regex": "Regular expression for matching a shebang line",
  "signal-exit": "when you want to fire an event no matter how a process exits.",
  "single-line-log": "Keep writing to the same line in the terminal. Very useful when you write progress bars, or a status message during longer operations",
  "socket.io-adapter": "default socket.io in-memory adapter",
  "socket.io-client": "[![Build Status](https://secure.travis-ci.org/socketio/socket.io-client.svg?branch=master)](http://travis-ci.org/socketio/socket.io-client) [![Dependency Status](https://david-dm.org/socketio/socket.io-client.svg)](https://david-dm.org/socketio/socket.io-",
  "socket.io-parser": "socket.io protocol parser",
  "socket.io": "node.js realtime framework server",
  "source-map": "Generates and consumes source maps",
  "sourcemap-codec": "Encode/decode sourcemap mappings",
  "speedometer": "simple speed measurement in javascript",
  "split": "split a Text Stream into a Line Stream",
  "sprintf-js": "JavaScript sprintf implementation",
  "sql-template-strings": "ES6 tagged template strings for prepared statements with mysql and postgres",
  "sqlite": "SQLite client for Node.js applications with SQL-based migrations API",
  "sqlite3": "Asynchronous, non-blocking SQLite3 bindings",
  "sqlstring": "Simple SQL escape and format for MySQL",
  "sshpk": "A library for finding and using SSH public keys",
  "static-eval": "evaluate statically-analyzable expressions",
  "static-module": "convert module usage to inline expressions",
  "statuses": "HTTP status utility",
  "stream-browserify": "the stream module from node core for browsers",
  "stream-transform": "Object transformations implementing the Node.js `stream.Transform` API",
  "streamroller": "file streams that roll over when size limits, or dates are reached",
  "string-width": "Get the visual width of a string - the number of columns required to display it",
  "string_decoder": "The string_decoder module from Node core",
  "strip-ansi": "Strip ANSI escape codes from a string",
  "strip-final-newline": "Strip the final newline character from a string/buffer",
  "strip-json-comments": "Strip comments from JSON. Lets you use comments in your JSON files!",
  "sumchecker": "Checksum validator",
  "supports-color": "Detect whether a terminal supports color",
  "tar": "tar for node",
  "tcx-js": "A Node.js library for parsing TCX/XML files, such as from a Garmin GPS device.",
  "tedious": "A TDS driver, for connecting to MS SQLServer databases.",
  "term-size": "Reliably get the terminal window size (columns & rows)",
  "throttleit": "Throttle a function",
  "through": "simplified stream construction",
  "through2": "A tiny wrapper around Node.js streams.Transform (Streams2/3) to avoid explicit subclassing noise",
  "tiny-emitter": "A tiny (less than 1k) event emitter library",
  "tiny-inflate": "A tiny inflate implementation",
  "to-array": "Turn an array like into an array",
  "to-fast-properties": "Force V8 to use fast properties for an object",
  "to-readable-stream": "Convert a string/Buffer/Uint8Array to a readable stream",
  "to-regex-range": "Pass two numbers, get a regex-compatible source string for matching ranges. Validated against more than 2.78 million test assertions.",
  "toidentifier": "Convert a string of words to a JavaScript identifier",
  "token-stream": "Take an array of token and produce a more useful API to give to a parser",
  "touch": "like touch(1) in node",
  "tough-cookie": "RFC6265 Cookies and Cookie Jar for node.js",
  "tslib": "Runtime library for TypeScript helper functions",
  "tunnel-agent": "HTTP proxy tunneling agent. Formerly part of mikeal/request, now a standalone module.",
  "tunnel": "Node HTTP/HTTPS Agents for tunneling proxies",
  "tweetnacl": "Port of TweetNaCl cryptographic library to JavaScript",
  "type-check": "type-check allows you to check the types of JavaScript values at runtime with a Haskell like type syntax.",
  "type-fest": "A collection of essential TypeScript types",
  "type-is": "Infer the content-type of a request.",
  "type": "Runtime validation and processing of JavaScript types",
  "typed-function": "Type checking for JavaScript functions",
  "typedarray-to-buffer": "Convert a typed array to a Buffer without a copy",
  "typedarray": "TypedArray polyfill for old browsers",
  "typescript": "TypeScript is a language for application scale JavaScript development",
  "uglify-js": "JavaScript parser, mangler/compressor and beautifier toolkit",
  "uid-safe": "URL and cookie safe UIDs",
  "unc-path-regex": "Regular expression for testing if a file path is a windows UNC file path. Can also be used as a component of another regexp via the `.source` property.",
  "undefsafe": "Undefined safe way of extracting object properties",
  "underscore": "JavaScript's functional programming helper library.",
  "underscore.string": "String manipulation extensions for Underscore.js javascript library.",
  "unicode-properties": "Provides fast access to unicode character properties",
  "unicode-trie": "Unicode Trie data structure for fast character metadata lookup, ported from ICU",
  "unique-string": "Generate a unique random string",
  "universal-user-agent": "Get a user agent string in both browser and node",
  "universalify": "Make a callback- or promise-based function support both promises and callbacks.",
  "unpipe": "Unpipe a stream from all destinations",
  "update-notifier": "Update notifications for your CLI app",
  "uri-js": "An RFC 3986/3987 compliant, scheme extendable URI/IRI parsing/validating/resolving library for JavaScript.",
  "url-parse-lax": "Lax url.parse() with support for protocol-less URLs & IPs",
  "url": "The core `url` packaged standalone for use with Browserify.",
  "util-deprecate": "The Node.js `util.deprecate()` function with browser support",
  "util": "Node.js's util module for all engines",
  "utils-merge": "merge() utility function",
  "uuid": "RFC4122 (v1, v4, and v5) UUIDs",
  "v8flags": "Get available v8 flags.",
  "validator": "String validation and sanitization",
  "vary": "Manipulate the HTTP Vary header",
  "verror": "richer JavaScript errors",
  "void-elements": "Array of \"void elements\" defined by the HTML specification.",
  "walk": "A node port of python's os.walk",
  "which-module": "Find the module object for something that was require()d",
  "which": "Like which(1) unix command. Find the first instance of an executable in the PATH.",
  "wide-align": "A wide-character aware text alignment function for use on the console or with fixed width fonts.",
  "widest-line": "Get the visual width of the widest line in a string - the number of columns required to display it",
  "windows-release": "Get the name of a Windows version from the release number: `5.1.2600` → `XP`",
  "with": "Compile time `with` for strict mode JavaScript",
  "wns": "Send push notifications to Windows 8 devices using WNS",
  "wordwrap": "Wrap those words. Show them at what columns to start and stop.",
  "wrap-ansi": "Wordwrap a string with ANSI escape codes",
  "wrappy": "Callback wrapping utility",
  "write-file-atomic": "Write files in an atomic fashion w/configurable ownership",
  "ws": "Simple to use, blazing fast and thoroughly tested websocket client and server for Node.js",
  "xdg-basedir": "Get XDG Base Directory paths",
  "xml2js": "Simple XML to JavaScript object converter.",
  "xmlbuilder": "An XML builder for node.js",
  "xmldom": "A W3C Standard XML DOM(Level2 CORE) implementation and parser(DOMParser/XMLSerializer).",
  "xmlhttprequest-ssl": "XMLHttpRequest for Node",
  "xpath.js": "Xpath pure javascript implementation for node.js",
  "xregexp": "Extended regular expressions",
  "xtend": "extend like a boss",
  "y18n": "the bare-bones internationalization library used by yargs",
  "yallist": "Yet Another Linked List",
  "yargs-parser": "the mighty option parser used by yargs",
  "yargs-unparser": "Converts back a yargs argv object to its original array form",
  "yargs": "yargs the modern, pirate-themed, successor to optimist.",
  "yauzl": "yet another unzip library for node",
  "yeast": "Tiny but linear growing unique id generator"
}